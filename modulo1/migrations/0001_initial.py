# Generated by Django 4.1.7 on 2023-02-17 20:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accionpermitida',
            fields=[
                ('pkaccionpermitida', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=20)),
                ('descripcion', models.CharField(max_length=500)),
                ('ruta', models.CharField(max_length=500)),
                ('accionpermitida_pkaccionpermitida', models.IntegerField()),
            ],
            options={
                'db_table': 'accionpermitida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccionpermitidaHasPlantilla',
            fields=[
                ('accionpermitida_pkaccionpermitida', models.IntegerField(primary_key=True, serialize=False)),
                ('plantilla_pkplantilla', models.IntegerField()),
            ],
            options={
                'db_table': 'accionpermitida_has_plantilla',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccionpermitidaHasUsuario',
            fields=[
                ('accionpermitida_pkaccionpermitida', models.IntegerField(primary_key=True, serialize=False)),
                ('accionpermitida_accionpermitida_pkaccionpermitida', models.IntegerField()),
                ('usuario_pkusuario', models.IntegerField()),
            ],
            options={
                'db_table': 'accionpermitida_has_usuario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artista',
            fields=[
                ('pkartista', models.AutoField(primary_key=True, serialize=False)),
                ('nombreartistico', models.CharField(max_length=100)),
                ('generomusical', models.CharField(max_length=100)),
                ('trayectoriaartistica', models.CharField(max_length=100)),
                ('usuario_pkusuario', models.IntegerField()),
                ('tipoartista_pktipoartista', models.IntegerField()),
            ],
            options={
                'db_table': 'artista',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Asiste',
            fields=[
                ('cliente_pkcliente', models.IntegerField(primary_key=True, serialize=False)),
                ('evento_pkevento', models.IntegerField()),
            ],
            options={
                'db_table': 'asiste',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('pkcliente', models.AutoField(primary_key=True, serialize=False)),
                ('usuario_pkusuario', models.IntegerField()),
            ],
            options={
                'db_table': 'cliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cronograma',
            fields=[
                ('ipkcronograma', models.AutoField(primary_key=True, serialize=False)),
                ('hora', models.DateTimeField()),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'cronograma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('pkdepartamento', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=45)),
                ('nombre', models.CharField(max_length=45)),
                ('pais_pkpais', models.IntegerField()),
            ],
            options={
                'db_table': 'departamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disponibilidad',
            fields=[
                ('pkdisponibilidad', models.AutoField(primary_key=True, serialize=False)),
                ('horario', models.DateTimeField()),
            ],
            options={
                'db_table': 'disponibilidad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Establecimiento',
            fields=[
                ('pkestablecimiento', models.AutoField(primary_key=True, serialize=False)),
                ('fkduenio', models.IntegerField()),
                ('fkmunlugar', models.IntegerField()),
                ('direccion', models.CharField(max_length=45)),
                ('nombre', models.CharField(max_length=45)),
                ('nit', models.CharField(max_length=45)),
                ('capacidad', models.IntegerField()),
                ('precio', models.IntegerField()),
                ('organizador_pkduenio', models.IntegerField()),
                ('organizador_usuario_pkusuario', models.IntegerField()),
                ('municipio_pkmunicipio', models.IntegerField()),
            ],
            options={
                'db_table': 'establecimiento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Establedispo',
            fields=[
                ('pkestabledispo', models.AutoField(primary_key=True, serialize=False)),
                ('disponibilidad_pkdisponibilidad', models.IntegerField()),
                ('establecimiento_pkestablecimiento', models.IntegerField()),
            ],
            options={
                'db_table': 'establedispo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('pkestado', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=45)),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'estado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estadocivil',
            fields=[
                ('pkestadocivil', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=45)),
                ('descripcion', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'estadocivil',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estagenemusi',
            fields=[
                ('pkestagenemusi', models.AutoField(primary_key=True, serialize=False)),
                ('generomusica_pkgeneromusica', models.IntegerField()),
                ('establecimiento_pkestablecimiento', models.IntegerField()),
            ],
            options={
                'db_table': 'estagenemusi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estatipgen',
            fields=[
                ('pkestatipgen', models.AutoField(primary_key=True, serialize=False)),
                ('tipogenero_pktipogenero', models.IntegerField()),
                ('establecimiento_pkestablecimiento', models.IntegerField()),
            ],
            options={
                'db_table': 'estatipgen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('pkevento', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('descripcion', models.CharField(max_length=100)),
                ('capacidad', models.IntegerField()),
                ('precio', models.IntegerField()),
                ('tipoevento_pktipoevento', models.IntegerField()),
                ('establecimiento_pkestablecimiento', models.IntegerField()),
            ],
            options={
                'db_table': 'evento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventoHasArtista',
            fields=[
                ('evento_pkevento', models.IntegerField(primary_key=True, serialize=False)),
                ('artista_pkartista', models.IntegerField()),
                ('artista_usuario_pkusuario', models.IntegerField()),
                ('artista_tipoartista_pktipoartista', models.IntegerField()),
                ('cronograma_ipkcronograma', models.IntegerField()),
            ],
            options={
                'db_table': 'evento_has_artista',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('pkgenero', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=45)),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'genero',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Generomusica',
            fields=[
                ('pkgeneromusica', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'generomusica',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('pkmunicipio', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=20)),
                ('nombre', models.CharField(max_length=100)),
                ('departamento_pkdepartamento', models.IntegerField()),
            ],
            options={
                'db_table': 'municipio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organizador',
            fields=[
                ('pkduenio', models.AutoField(primary_key=True, serialize=False)),
                ('fkusuario', models.IntegerField()),
                ('usuario_pkusuario', models.IntegerField()),
            ],
            options={
                'db_table': 'organizador',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('pkpais', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=45)),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'pais',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('pkpersona', models.AutoField(primary_key=True, serialize=False)),
                ('identificacion', models.CharField(max_length=200)),
                ('nombre', models.CharField(max_length=500)),
                ('apellido', models.CharField(max_length=500)),
                ('email', models.CharField(max_length=100)),
                ('fechanacimiento', models.DateField()),
                ('estadocivil_pkestadocivil', models.IntegerField()),
                ('genero_pkgenero', models.IntegerField()),
                ('tipoidentificacion_pktipoidentifi', models.IntegerField()),
                ('municipio_pkmunicipio', models.IntegerField()),
            ],
            options={
                'db_table': 'persona',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plantilla',
            fields=[
                ('pkplantilla', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=45)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'plantilla',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('pkreserva', models.AutoField(primary_key=True, serialize=False)),
                ('hora', models.DateField()),
                ('cantipersonas', models.IntegerField()),
                ('cliente_pkcliente', models.IntegerField()),
                ('evento_pkevento', models.IntegerField()),
            ],
            options={
                'db_table': 'reserva',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Telefono',
            fields=[
                ('pktelefono', models.AutoField(primary_key=True, serialize=False)),
                ('numero', models.IntegerField()),
                ('tipotelefono_pktipotelefono', models.IntegerField()),
                ('persona_pkpersona', models.IntegerField()),
            ],
            options={
                'db_table': 'telefono',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipoartista',
            fields=[
                ('pktipoartista', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tipoartista',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipoevento',
            fields=[
                ('pktipoevento', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tipoevento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipogenero',
            fields=[
                ('pktipogenero', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tipogenero',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipoidentificacion',
            fields=[
                ('pktipoidentifi', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=20)),
                ('descripcion', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tipoidentificacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipotelefono',
            fields=[
                ('pktipotelefono', models.IntegerField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=20)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tipotelefono',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('pkusuario', models.AutoField(primary_key=True, serialize=False)),
                ('nombreusuario', models.CharField(max_length=200)),
                ('contrasenia', models.CharField(max_length=200)),
                ('tipousuarioenum', models.IntegerField()),
                ('ultimoacceso', models.DateField()),
                ('codactivacion', models.CharField(max_length=45)),
                ('persona_pkpersona', models.IntegerField()),
            ],
            options={
                'db_table': 'usuario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuarioHasEstado',
            fields=[
                ('usuario_pkusuario', models.IntegerField(primary_key=True, serialize=False)),
                ('usuario_persona_pkpersona', models.IntegerField()),
                ('estado_pkestado', models.IntegerField()),
                ('fechainicio', models.DateTimeField()),
                ('fechafin', models.DateTimeField()),
            ],
            options={
                'db_table': 'usuario_has_estado',
                'managed': False,
            },
        ),
    ]
